@using INTRANET.Model
@using INTRANET.Models
@using INTRANET.Common
@model  HrCvListVM

@{
    ViewBag.Title = "Employee List";
}
<br />
<a class="btn btn-default" href="@Url.Action("Index", "HrDepartment")">Departments</a>
<a class="btn btn-default" href="@Url.Action("Index", "HrPosition")">Positions</a>
<a class="btn btn-default" href="@Url.Action("Index", "HrCvHint")">CV Hint Mesages</a>
<a class="btn btn-default" href="@Url.Action("ImportCV")">Import CV</a>
<br />
<h2>@ViewBag.Title</h2>

<div class="container">
    <br />
    <div>
        <table id="hrEmployeGrid" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th><input name="select_all" value="1" id="select-all" type="checkbox" /></th>
                    <th>Full name</th>
                    <th>
                        <span id="departmentFilter" data-toggle="modal" data-target="#departments" class="filter-button glyphicon glyphicon-filter"></span>
                        Department
                    </th>
                    <th>
                        <span id="positionFilter" data-toggle="modal" data-target="#positions" class="filter-button glyphicon glyphicon-filter"></span>
                        Position
                    </th>
                    <th>CV Uz</th>
                    <th>CV Ru</th>
                    <th>Docs</th>
                    <th>Edit</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<div class="row">
    <a href="@Url.Action("Create", "HrEmployee")" class="btn btn-success">Create Employee</a>
    <button type="button" id="CvStatusButton" class="btn btn-info" data-toggle="modal" data-target="#CvstatusChangeDialog">Change CV completion status</button>
    <button type="button" id="SendEmailButton" class="btn btn-warning" data-toggle="modal" data-target="#SendEmailDialog">Send Email</button>
</div>


<div class="modal" role="dialog" id="CvstatusChangeDialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">
                    CV status change options
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </h4>
            </div>
            <div class="modal-body">
                <p>Select for which employees status should be changed</p>
                @Html.DropDownList("ChangeCompletionStatusMode",
                    new List<SelectListItem>() {
                      new SelectListItem { Text="Selected employees", Value=((int)HrCvChangeCompletionStatusMode.SelectedEmployees).ToString(), Selected=true},
                         new SelectListItem { Text="All employees ", Value=((int)HrCvChangeCompletionStatusMode.AllEmployees).ToString()},
                    },
                    //"Select",
                    new { @class = "form-control" })
                <p></p>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" id="ChangeCVStatusButton">Change</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" role="dialog" id="departments">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">
                    Select departments
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    @foreach (var item in Model.Departments)
                    {
                        <div class="col-md-4">
                            <label>
                                <input type="checkbox"
                                       class="filteringCheckbox"
                                       name="selectedDepartments"
                                       value="@item.Value" /> @item.Text
                                </label>
                            </div>
                        }
                </div>
                <p></p>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Done</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" role="dialog" id="positions">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">
                    Select positions
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    @foreach (var item in Model.Positions)
                    {
                        <div class="col-md-4">
                            <label>
                                <input type="checkbox"
                                       class="filteringCheckbox"
                                       name="selectedPositions"
                                       value="@item.Value" /> @item.Text
                                </label>
                            </div>
                        }
                </div>
                <p></p>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Done</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" role="dialog" id="SendEmailDialog">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">
                    Compose a message
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="message">Message: </label>
                </div>
                <div class="form-group">
                    <textarea class="form-control" id="message" name="message" autofocus="autofocus" rows="10"></textarea>
                </div>
                <p></p>

                <div class="modal-footer">
                    <button type="button" class="btn btn-success" id="SendMessageButton">Send</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link href="~/Scripts/DataTables/datatables.min.css" rel="stylesheet" />
    <link href="~/Scripts/DataTables/DataTables-1.10.13/css/dataTables.checkboxes.css" rel="stylesheet" />
    <link href="~/Content/hrCvEmployeeList.css" rel="stylesheet" runat="server" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />

}


@section Scripts {

    <script src="~/Scripts/DataTables/datatables.min.js"></script>
    <script src="~/Scripts/DataTables/DataTables-1.10.13/js/dataTables.checkboxes.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js" type="text/javascript"></script>


    <script>
        var hrEmployeGrid = false;
        $(document).ready(function () {

            hrEmployeGrid = $("#hrEmployeGrid").DataTable({
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                //"pageLength": 5,

                "ajax": {
                    "url": "/HrCv/LoadData",
                    "type": "POST",
                    "datatype": "json",
                    "data": function (d) {
                        d.selectedDepartments = GetSelectedDepartments();
                        d.selectedPositions = GetSelectedPositions();
                    }
                },
                "fnDrawCallback": function (oSettings) {
                    $("input[name='selectedEmployees']").click(function () {
                        if ($("input[name='selectedEmployees']").length == $("input[name='selectedEmployees']:checked").length) {
                            $("#select-all").prop("checked", true);
                        } else {
                            $("#select-all").prop("checked", false);
                        }
                    });
                },
                "columnDefs":
                    [
                        {
                            "targets": [0],
                            "searchable": false,
                            "orderable": false,
                            "render": function (data, type, full, meta) {
                                return '<input type="checkbox" name="selectedEmployees" value="'
                                    + data.Id + '">';
                            }

                        },
                        {
                            "targets": [4],
                            "searchable": false,
                            "orderable": false,
                            "render": function (data, type, row) {
                                var checked = '';
                                if (row.HasFilledUzCV)
                                    checked = 'checked="checked"';

                                return '<input type="checkbox" disabled="disabled" '
                                    + checked + '>' +
                                    '<a title="edit" href="/HrCv/FillCv/' + '?employeeId=' + row.Id + '&Language=' + @(((int)HrCvLanguage.Uz).ToString()) + '"><span class="glyphicon glyphicon-edit"></span></a>' +
                                    '<a title="download" href="/HrCv/DownloadCv/' + '?employeeId=' + row.Id + '&Language=' + @(((int)HrCvLanguage.Uz).ToString()) + '"><span class="glyphicon glyphicon-download-alt"></span></a>' +
                                    '<a title="import" href="/HrCv/ImportCV/' + '?employeeId=' + row.Id + '&language=@(HrCvLanguage.Uz.ToString())"><span class="glyphicon glyphicon-import"></span></a>';

                            }
                        },
                        {
                            "targets": [5],
                            "searchable": false,
                            "orderable": false,
                            "render": function (data, type, row) {

                                var checked = '';
                                if (row.HasFilledRuCV)
                                    checked = 'checked="checked"';

                                return '<input type="checkbox" disabled="disabled" '
                                    + checked + '>' +
                                    '<a title="edit" href="/HrCv/FillCv/' + '?employeeId=' + row.Id + '&Language=' + @(((int)HrCvLanguage.Ru).ToString()) + '"><span class="glyphicon glyphicon-edit"></span></a>' +
                                    '<a title="download" href="/HrCv/DownloadCv/' + '?employeeId=' + row.Id + '&Language=' + @(((int)HrCvLanguage.Ru).ToString()) + '"><span class="glyphicon glyphicon-download-alt"></span></a>' +
                                    '<a title="import" href="/HrCv/ImportCV/' + '?employeeId=' + row.Id + '&language=@(HrCvLanguage.Ru.ToString())"><span class="glyphicon glyphicon-import"></span></a>';
                            }
                        },
                        {
                            "targets": [6],
                            "searchable": false,
                            "orderable": false,
                            "render": function (data, type, full, meta) {
                                return '<a href="/HrEmployeeDocument/Index/' + data.Id + '" ><span class="glyphicon glyphicon-file"></span></a>';
                            }
                        },
                        {
                            "targets": [7],
                            "searchable": false,
                            "orderable": false,
                            "render": function (data, type, row) {
                                return '<a href="/HrEmployee/Edit/' + row.Id + '" ><span class="glyphicon glyphicon-pencil"></span></a>';
                            }
                        },


                    ],
                "select": {
                    'style': 'multi'
                },
                "order": [[1, 'asc']],
                "columns": [
                    { "data": {} },
                    { "data": "FullName", "name": "FullName", "autoWidth": true },
                    { "data": "DepartmentName", "name": "DepartmentName", "autoWidth": true },
                    { "data": "PositionName", "name": "PositionName", "autoWidth": true },
                    { "data": "HasFilledRuCV", "name": "HasFilledRuCV", "autoWidth": true },
                    { "data": "HasFilledUzCV", "name": "HasFilledUzCV", "autoWidth": true },
                    { "data": {} },
                    { "data": {} },
                ]
            });

            $('.filteringCheckbox').change(function () {
                RefreshGrid();
            });

            $('#CvStatusButton').click(function () {
                $("#CvstatusChangeDialog").modal();
            });
        });

        function RefreshGrid() {
            hrEmployeGrid.ajax.reload();
        }

        function GetSelectedDepartments() {
            var departments = [];
            $.each($("input[name='selectedDepartments']:checked"), function () {
                departments.push($(this).val());
            });

            return departments;
        }

        function GetSelectedPositions() {
            var positions = [];
            $.each($("input[name='selectedPositions']:checked"), function () {
                positions.push($(this).val());
            });

            return positions;
        }


        $('#ChangeCVStatusButton').click(function () {
            $('#CvstatusChangeDialog').modal('hide');
            ChangeCvStatus();
        });

        function GetSelectedEmployees() {
            var selectedEmployees = []
            $.each($("input[name='selectedEmployees']:checked"), function () {
                selectedEmployees.push($(this).val());
            });
            return selectedEmployees;
        }

        function ChangeCvStatus() {

            var selectedEmployeeList = GetSelectedEmployees();
            var jsonData = { 'mode': $("#ChangeCompletionStatusMode").val(), selectedEmployees: selectedEmployeeList };
            $.ajax({
                url: "/HrCv/ChangeCvCompletionStatus",
                type: "POST",
                datatype: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(jsonData),
                success: function (data) {
                    if (data.IsSuccess == true) {
                        RefreshGrid()
                    }
                    else {
                        alert("Error during request. Try again later")
                    }
                },
                error: function (data) {
                    alert("Error during request. Try again later")
                }
            });
        }

        $("#select-all").click(function () {
            $("input[name='selectedEmployees']").prop("checked", this.checked);
        });


        $('#departmentFilter').click(function () {
            $("#departments").modal();
        });
        $('#positionFilter').click(function () {
            $("#positions").modal();
        });
        $('#SendEmailButton').click(function () {
            var selectedEmployeeList = GetSelectedEmployees();
            if (selectedEmployeeList.length > 0)
                $("#SendEmailDialog").modal();
            else
                alert("Please, select employees first");

        });

        $('#SendMessageButton').click(function () {

            if (trimAll(document.getElementById('message').value) === '') {
                alert('You cannot send empty message. Please, enter the message');
            } else {
                $('#SendEmailDialog').modal('hide');
                SendEmail();
            }
        });

        function trimAll(sString) {
            while (sString.substring(0, 1) == ' ') {
                sString = sString.substring(1, sString.length);
            }
            while (sString.substring(sString.length - 1, sString.length) == ' ') {
                sString = sString.substring(0, sString.length - 1);
            }
            return sString;
        }

        function SendEmail() {
            var selectedEmployeeList = GetSelectedEmployees();
            var message = $('textarea#message').val();
            var jsonData = { 'text': message, selectedEmployees: selectedEmployeeList };
            $.ajax({
                url: "/HrCv/SendEmail",
                type: "POST",
                datatype: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(jsonData),
                success: function (data) {
                    if (data.IsSuccess == true) {
                        alert("Emails are sent");
                    }
                    else {
                        alert("Error during sending. Try again later")
                    }
                },
                error: function (data) {
                    alert("Error during sending. Try again later")
                }
            });
        }

    </script>
}
